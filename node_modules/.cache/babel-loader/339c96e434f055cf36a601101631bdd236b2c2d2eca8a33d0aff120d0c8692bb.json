{"ast":null,"code":"import Club from '../models/Club';\nimport Course from '../models/Course';\nexport const clubs = [];\nexport function addClub(name, description, longDesc) {\n  const newId = clubs.length + 1;\n  clubs.push(new Club(newId, name, description, longDesc));\n}\nexport const courses = [];\nexport function addCourse(title, desc, longDesc) {\n  const newId = Math.max(...courses.map(c => parseInt(c.id))) + 1;\n  courses.push(new Course(newId, title, desc, longDesc));\n}\nexport const testimonies = [];\nexport function addTestimony(testimony, affiliationId) {\n  testimony.affiliationId = affiliationId;\n  testimonies.push(testimony);\n}\nexport function getTestimoniesForAffiliation(affiliation) {\n  return testimonies.filter(t => t.affiliationId === affiliation.id);\n}","map":{"version":3,"names":["Club","Course","clubs","addClub","name","description","longDesc","newId","length","push","courses","addCourse","title","desc","Math","max","map","c","parseInt","id","testimonies","addTestimony","testimony","affiliationId","getTestimoniesForAffiliation","affiliation","filter","t"],"sources":["C:/Users/rexrt/Downloads/hsecspromo/HSECSPromotion/src/data/data.ts"],"sourcesContent":["import Club from '../models/Club';\r\nimport Course from '../models/Course';\r\nimport Testimony from '../models/Testimony';\r\nimport Affiliation from '../models/Affiliation';\r\nimport coursesData from './Courses.json';\r\n\r\nexport const clubs: Club[] = [];\r\n\r\nexport function addClub(name: string, description: string, longDesc?: string) {\r\n  const newId = clubs.length + 1;\r\n  clubs.push(new Club(newId, name, description, longDesc));\r\n}\r\n\r\nexport const courses: Course[] = [];\r\n\r\nexport function addCourse(title: string, desc: string, longDesc?: string) {\r\n  const newId = (Math.max(...courses.map(c => parseInt(c.id))) + 1);\r\n  courses.push(new Course(newId, title, desc, longDesc));\r\n}\r\n\r\nexport const testimonies: Testimony[] = [];\r\n\r\nexport function addTestimony(testimony: Testimony, affiliationId: string) {\r\n  testimony.affiliationId = affiliationId;\r\n  testimonies.push(testimony);\r\n}\r\n\r\nexport function getTestimoniesForAffiliation(affiliation: Affiliation): Testimony[] {\r\n  return testimonies.filter(t => t.affiliationId === affiliation.id);\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,OAAOC,MAAM,MAAM,kBAAkB;AAKrC,OAAO,MAAMC,KAAa,GAAG,EAAE;AAE/B,OAAO,SAASC,OAAOA,CAACC,IAAY,EAAEC,WAAmB,EAAEC,QAAiB,EAAE;EAC5E,MAAMC,KAAK,GAAGL,KAAK,CAACM,MAAM,GAAG,CAAC;EAC9BN,KAAK,CAACO,IAAI,CAAC,IAAIT,IAAI,CAACO,KAAK,EAAEH,IAAI,EAAEC,WAAW,EAAEC,QAAQ,CAAC,CAAC;AAC1D;AAEA,OAAO,MAAMI,OAAiB,GAAG,EAAE;AAEnC,OAAO,SAASC,SAASA,CAACC,KAAa,EAAEC,IAAY,EAAEP,QAAiB,EAAE;EACxE,MAAMC,KAAK,GAAIO,IAAI,CAACC,GAAG,CAAC,GAAGL,OAAO,CAACM,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAACE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAE;EACjET,OAAO,CAACD,IAAI,CAAC,IAAIR,MAAM,CAACM,KAAK,EAAEK,KAAK,EAAEC,IAAI,EAAEP,QAAQ,CAAC,CAAC;AACxD;AAEA,OAAO,MAAMc,WAAwB,GAAG,EAAE;AAE1C,OAAO,SAASC,YAAYA,CAACC,SAAoB,EAAEC,aAAqB,EAAE;EACxED,SAAS,CAACC,aAAa,GAAGA,aAAa;EACvCH,WAAW,CAACX,IAAI,CAACa,SAAS,CAAC;AAC7B;AAEA,OAAO,SAASE,4BAA4BA,CAACC,WAAwB,EAAe;EAClF,OAAOL,WAAW,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,aAAa,KAAKE,WAAW,CAACN,EAAE,CAAC;AACpE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}